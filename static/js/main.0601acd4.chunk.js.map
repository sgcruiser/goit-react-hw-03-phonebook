{"version":3,"sources":["components/FormContacts/FormContacts.module.scss","components/SearchContacts/SearchContacts.module.scss","components/Section/Section.module.scss","components/ContactItem/ContactItem.module.scss","components/Container/Container.module.css","components/ContactsList/ContactsList.module.scss","components/Phonebook/Phonebook.module.scss","components/Container/Container.jsx","components/Section/Section.jsx","components/FormContacts/FormContacts.jsx","components/SearchContacts/SearchContacts.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Phonebook/Phonebook.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","props","section","title","defaultProps","FormContacts","state","name","number","handlChange","event","currentTarget","value","setState","handlSubmit","preventDefault","newContact","id","uuidv4","onSubmit","reset","this","form","label","type","pattern","required","onChange","button","React","Component","SearchContacts","input","ContactItem","contact","onDeleteContact","item","onClick","ContactsList","contacts","list","map","Phonebook","filter","formSubmitHandler","data","find","alert","handleSearch","handleDeleteContact","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","prevContacts","nextContacts","setItem","stringify","search","toLowerCase","includes","phonebook","defaultsProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0601acd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__1LoBb\",\"label\":\"FormContacts_label__1NYKu\",\"button\":\"FormContacts_button__2mutJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SearchContacts_label__1PDvV\",\"title\":\"SearchContacts_title__2eCIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3TF1A\",\"title\":\"Section_title__3XJ0T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__FLQuY\",\"button\":\"ContactItem_button__2L2fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__FO0MP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3b_Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Phonebook_phonebook__2n0FW\"};","import React from 'react';\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.scss';\r\n\r\nconst Section = props => {\r\n  return (\r\n    <section className={styles.section}>\r\n      {props.title && <span className={styles.title}>{props.title}</span>}\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './FormContacts.module.scss';\r\n\r\nclass FormContacts extends React.Component {\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handlChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handlSubmit = event => {\r\n    event.preventDefault();\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(newContact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handlSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handlChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handlChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormContacts;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './SearchContacts.module.scss';\r\n\r\nconst SearchContacts = ({ label, value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      <span className={styles.title}>{label}</span>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nSearchContacts.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchContacts;\r\n","import styles from './ContactItem.module.scss';\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span>{contact.name}</span>\r\n      <span>{contact.number}</span>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => {\r\n          onDeleteContact(contact);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ContactItem from '../ContactItem';\r\n\r\nimport styles from './ContactsList.module.scss';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport Section from '../Section';\r\nimport FormContacts from '../FormContacts';\r\nimport SearchContacts from '../SearchContacts';\r\nimport ContactsList from '../ContactsList';\r\n\r\nimport styles from './Phonebook.module.scss';\r\n\r\nclass Phonebook extends React.Component {\r\n  static defaultsProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log('App componentDidMount');\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contacts);\r\n\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevContacts = prevState.contacts;\r\n    const nextContacts = this.state.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      // console.log(this.state.contacts);\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  formSubmitHandler = data => {\r\n    this.state.contacts.find(contact => contact.name === data.name)\r\n      ? alert(`${data.name} is already in contacts`)\r\n      : this.setState(({ contacts }) => ({ contacts: [data, ...contacts] }));\r\n  };\r\n\r\n  handleSearch = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  handleDeleteContact = data => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== data.id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const search = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n\r\n    return (\r\n      <div className={styles.phonebook}>\r\n        <Section title=\"Phonebook\">\r\n          <FormContacts onSubmit={this.formSubmitHandler} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <SearchContacts\r\n            label=\"Find contacts by name\"\r\n            value={filter}\r\n            onChange={this.handleSearch}\r\n          />\r\n          <ContactsList\r\n            contacts={search}\r\n            onDeleteContact={this.handleDeleteContact}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import Container from './components/Container';\nimport Phonebook from './components/Phonebook';\n\n// import './App.scss';\n\nfunction App() {\n  return (\n    <Container>\n      <Phonebook />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\n// import './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}